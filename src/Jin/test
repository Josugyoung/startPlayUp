/* Desktop - 1 */

position: relative;
width: 1440px;
height: 1024px;

background: #FFFFFF;


/* Background */

position: absolute;
width: 1440px;
height: 1024px;
left: 0px;
top: 0px;

background: #E0E3DA;


/* LoginWrapper */

position: absolute;
width: 446px;
height: 665px;
left: 497px;
top: 180px;

background: #FFFFF3;
box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);


/* StartPlayUp */

position: absolute;
width: 358px;
height: 109px;
left: 535px;
top: 216px;

font-family: Roboto;
font-style: normal;
font-weight: 300;
font-size: 64px;
line-height: 75px;
text-align: center;

color: #000000;



/* EmailLine */

position: absolute;
width: 354px;
height: 0px;
left: 543px;
top: 411px;

border: 1px solid #000000;


/* Email */

position: absolute;
width: 335px;
height: 31px;
left: 543px;
top: 388px;

font-family: Roboto;
font-style: normal;
font-weight: 300;
font-size: 18px;
line-height: 21px;

color: #878787;



/* PassWordLine */

position: absolute;
width: 354px;
height: 0px;
left: 543px;
top: 458px;

border: 1px solid #000000;


/* Password */

position: absolute;
width: 355px;
height: 19px;
left: 543px;
top: 437px;

font-family: Roboto;
font-style: normal;
font-weight: 300;
font-size: 18px;
line-height: 21px;

color: #878787;



/* LoginButton */

position: absolute;
width: 127px;
height: 32px;
left: 654px;
top: 478px;

background: #566270;


/* SignUpButton */

position: absolute;
width: 127px;
height: 32px;
left: 654px;
top: 522px;

background: #566270;


/* Login */

position: absolute;
width: 44px;
height: 21px;
left: 695px;
top: 483px;

font-family: Roboto;
font-style: normal;
font-weight: 300;
font-size: 18px;
line-height: 21px;
/* identical to box height */

color: #FFFFFF;



/* or */

position: absolute;
width: 45px;
height: 18px;
left: 695px;
top: 565px;

font-family: Roboto;
font-style: normal;
font-weight: 300;
font-size: 14px;
line-height: 16px;
text-align: center;

color: #000000;



/* kakao_login_large_narrow 1 */

position: absolute;
width: 285px;
height: 65px;
left: 575px;
top: 614px;

background: url(kakao_login_large_narrow.png);


/* 네이버 아이디로 로그인_완성형_Green 1 */

position: absolute;
width: 285px;
height: 65px;
left: 575px;
top: 719px;

background: url(네이버 아이디로 로그인_완성형_Green.png);


/* Sing Up */

position: absolute;
width: 70px;
height: 23px;
left: 682px;
top: 526px;

font-family: Roboto;
font-style: normal;
font-weight: 300;
font-size: 18px;
line-height: 21px;
text-align: center;

color: #FFFFFF;


//네이버 로그인 <div onClick={initializeNaverLogin} id='naverIdLogin'/>
    //네이버 로그인
/*
    const history=useHistory()
    const location=useLocation();
const {naver} = window;
const initializeNaverLogin=()=>{
    const naverLogin=new naver.LoginWithNaverId({
        clientId:'ZLFAGtItFGDqMKyhBgU9',
        callbackUrl:'http://localhost:3000/Main',
        isPopup:false,
        loginButton: { color: "green", type: 3, height: 40 }
    });
    naverLogin.init();
}
const getNaverToken=()=>{
    if(!location.hash) return;
    const token = location.hash.split('=')[1].split('&')[0];
    console.log('로그인 성공',token);
    console.log(window)
};
useEffect(() => {
    initializeNaverLogin();
    getNaverToken();

}, []);
*/

 //카카오 로그인
    /*
    const KakaoLogin = () => {
        
        loginWithKakao();
     }
    
    const loginWithKakao=()=>{
        Kakao.init('3eba9d0656f87b8cb00ae9e1e9f6ca31');
        try{
            return new Promise((resolve,reject)=>{
                if(!Kakao){
                    reject("Kakao 인스턴스가 존재하지 않습니다.")
                    }
                    Kakao.Auth.login({
                        success:(auth)=>{
                            console.log('정상적으로 로그인 되었습니다.',auth)
                            .then(res=> res.json())
                            .then(res=>{
                                localStorage.setItem("Kakao_token",res.access_token);
                                if(res.access_token){
                                    console.log(res)
                                    history.push("/Main");
                                }
                            })
                        },
                        fail:(err)=>{
                            console.error(err)
                        }
                    })
                })
            }
            catch(err){
                console.error(err)
            }
        }
        */
//<button onClick={KakaoLogin}><img src="//k.kakaocdn.net/14/dn/btqCn0WEmI3/nijroPfbpCa4at5EIsjyf0/o.jpg" /></button>
        /*
    const onReset=()=>{
        setInputs({
            email: '',
            password: ''
        })
    };
    */
   /*
   
    return(
        
        <p>
          <Input name="email" placeholder="Email" onChange={onChange} value={email}/>
          <p></p>
          <Input name="password" placeholder="Password" onChange={onChange} value={password}/>
          <p></p>
          <Button onClick={
              <Route expact path ="/Main" component ={Main}/>
          }>로그인</Button>
          <div>
              <b>값: </b>
              {email}({password})
          </div>
        </p> 
    );
     */