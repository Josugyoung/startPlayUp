{"ast":null,"code":"import { chatAddMessageRef } from \"../../ChatModule/addMessage\";\nimport { PEER_ROCK_PAPER_SCISSORS, PEER_CHAT } from \"../../../Constants/peerDataTypes\";\nexport const getDataFromPeerOn = ({\n  peer,\n  chatListRef,\n  setChatList,\n  setPeerData\n}) => {\n  peer.on('data', jsonData => {\n    const {\n      type,\n      nickname,\n      data\n    } = JSON.parse(jsonData);\n\n    switch (type) {\n      case PEER_CHAT:\n        chatAddMessageRef({\n          nickname,\n          inputMessage: data,\n          chatListRef,\n          setChatList\n        });\n        break;\n\n      case PEER_ROCK_PAPER_SCISSORS:\n        setPeerData(data);\n        break;\n\n      case TICHU:\n        setPeerData(data);\n        break;\n\n      default:\n        return;\n    }\n  });\n};","map":{"version":3,"sources":["/Users/chan/Desktop/Coder/TestFile/startPlayUp/frontend/src/JSC/Common/peerModule/receiveFromPeers/index.js"],"names":["chatAddMessageRef","PEER_ROCK_PAPER_SCISSORS","PEER_CHAT","getDataFromPeerOn","peer","chatListRef","setChatList","setPeerData","on","jsonData","type","nickname","data","JSON","parse","inputMessage","TICHU"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,6BAAlC;AACA,SAASC,wBAAT,EAAmCC,SAAnC,QAAoD,kCAApD;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,WAArB;AAAkCC,EAAAA;AAAlC,CAAD,KAAqD;AAClFH,EAAAA,IAAI,CAACI,EAAL,CAAQ,MAAR,EAAgBC,QAAQ,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA2BC,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAjC;;AACA,YAAQC,IAAR;AACI,WAAKR,SAAL;AACIF,QAAAA,iBAAiB,CAAC;AAAEW,UAAAA,QAAF;AAAYI,UAAAA,YAAY,EAAEH,IAA1B;AAAgCP,UAAAA,WAAhC;AAA6CC,UAAAA;AAA7C,SAAD,CAAjB;AACA;;AACJ,WAAKL,wBAAL;AACIM,QAAAA,WAAW,CAACK,IAAD,CAAX;AACA;;AACJ,WAAKI,KAAL;AACIT,QAAAA,WAAW,CAACK,IAAD,CAAX;AACA;;AACJ;AACI;AAXR;AAaH,GAfD;AAgBH,CAjBM","sourcesContent":["import { chatAddMessageRef } from \"../../ChatModule/addMessage\"\nimport { PEER_ROCK_PAPER_SCISSORS, PEER_CHAT } from \"../../../Constants/peerDataTypes\";\n\nexport const getDataFromPeerOn = ({ peer, chatListRef, setChatList, setPeerData }) => {\n    peer.on('data', jsonData => {\n        const { type, nickname, data } = JSON.parse(jsonData)\n        switch (type) {\n            case PEER_CHAT:\n                chatAddMessageRef({ nickname, inputMessage: data, chatListRef, setChatList });\n                break;\n            case PEER_ROCK_PAPER_SCISSORS:\n                setPeerData(data);\n                break;\n            case TICHU:\n                setPeerData(data);\n                break;\n            default:\n                return;\n        }\n    });\n}"]},"metadata":{},"sourceType":"module"}