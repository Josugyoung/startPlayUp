{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Desktop/Coder/TestFile/startPlayUp/frontend/src/JSC/Component/ChatComponent/index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { memo, useContext, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Message from './Message';\nimport MyTextInput from \"./MyTextInput\";\nimport Nav from \"./Nav\";\nimport { PeerDataContext, UserContext, PeersContext, VoicePeersContext } from \"../../store\";\nimport io from \"socket.io-client\";\nimport { chatAddMessage } from \"../../Common/ChatModule/addMessage\";\nimport { connectDataPeer } from \"../../Common/peerModule/CreatePeer/createDataPeers\";\nimport { connectVoicePeer } from \"../../Common/peerModule/CreatePeer/createVoicePeers\"; // import { RECEIVE_MESSAGE, socketApi } from \"../../Common/socketModule\";\n\nimport SideVoiceUser from \"./SideVoiceUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextField = styled.div`\n  display:flex;\n  padding:10px;\n  border: rgb(0, 0, 0);\n  flex-direction: column;\n  overflow-y: scroll;\n  height:${props => props.width || 600}px;\n  width:inherit;\n  border-right:3px solid #ececec;\n  background-color: white;\n  flex-grow:1;\n  \n  &::-webkit-scrollbar{\n    width: 100%;\n    background-color: black;\n  }\n`;\n_c = TextField;\nconst Chat = styled.div`\n\n    display:flex;\n    flex-direction: column;\n    height:${props => props.width || 600}px;\n    width:${props => props.width || 600}px;\n    border-radius: 10%;\n`;\n_c2 = Chat;\nconst TextFieldWithVoiceUsers = styled.div`\n      background-color: white;\n      width: inherit;\n      display: flex;\n      flex-direction: row;\n`;\n_c3 = TextFieldWithVoiceUsers;\nconst StyledAudio = styled.audio`\n    height: 40%;\n    width: 50%;\n    display:none;\n`;\n_c4 = StyledAudio;\n\nconst UserAudio = ({\n  peers,\n  peer\n}) => {\n  _s();\n\n  const voiceRef = useRef();\n  useEffect(() => {\n    peer.on(\"stream\", stream => {\n      voiceRef.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledAudio, {\n    playsInline: true,\n    autoPlay: true,\n    ref: voiceRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserAudio, \"JZWMvGTsAlZijkTK2z0Gc6Cj0cs=\");\n\n_c5 = UserAudio;\n\nfunction Index({\n  backgroundColor,\n  height,\n  width,\n  ...props\n}) {\n  _s2();\n\n  // socket io.connect\n  const socketRef = useRef();\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    peerData,\n    setPeerData\n  } = useContext(PeerDataContext);\n  const {\n    peers,\n    setPeers\n  } = useContext(PeersContext);\n  const {\n    voicePeers,\n    setVoicePeers\n  } = useContext(VoicePeersContext); // chat nickname\n\n  const myNickName = user; // chat state for rerendering\n\n  const [chatList, setChatList] = useState([]);\n  let chatListRef = useRef([...chatList]); // scroll ref;\n\n  const scrollRef = useRef(null);\n  const voiceRef = useRef();\n  let peersRef = useRef([]);\n  let voicePeersRef = useRef([]);\n  const roomID = \"9a06eb80-9fd4-11eb-a3e2-377a237cffe7\";\n\n  const scrollToBottom = () => {\n    const {\n      scrollHeight,\n      clientHeight\n    } = scrollRef.current;\n    scrollRef.current.scrollTop = scrollHeight - clientHeight;\n  };\n\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\"); // connectPeer({ socketRef, peersRef, roomID, peers, setPeers, chatList, chatListRef, setChatList, myNickname: user, peerData, setPeerData, voiceRef });\n    // let result = true;\n    // result = connectDataPeer({ socketRef, roomID, peersRef, setPeers, chatListRef, setChatList, myNickname: user, setPeerData });\n    // result && connectVoicePeer({ socketRef, voicePeersRef, roomID: roomID + \"-Voice\", setVoicePeers, myNickname: user });\n\n    connectDataPeer({\n      socketRef,\n      roomID,\n      peersRef,\n      setPeers,\n      chatListRef,\n      setChatList,\n      myNickname: user,\n      setPeerData\n    });\n    connectVoicePeer({\n      socketRef,\n      voicePeersRef,\n      roomID: roomID + \"-Voice\",\n      setVoicePeers,\n      myNickname: user\n    }); // 방법 1 테스트 해보기.\n    // return () => peersRef.current.forEach(i => {\n    //     console.log(\"destroy peer\", i);\n    //     i.peer.removeAllListeners();\n    //     i.peer.destroy();\n    // })\n    // 방법 2 테스트 해보기.\n    // return () => {\n    //     setPeers({});\n    // }\n  }, []);\n  console.log(\"asdf\", chatList);\n  useEffect(() => {\n    scrollToBottom();\n    chatListRef.current = [...chatList];\n  }, [chatList]);\n  return /*#__PURE__*/_jsxDEV(Chat, {\n    width: height,\n    height: width,\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextFieldWithVoiceUsers, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"textField\",\n        ref: scrollRef,\n        children: chatList.map((i, index) => /*#__PURE__*/_jsxDEV(Message, {\n          who: i.nickname === myNickName ? \"me\" : \"another\",\n          chatObject: i,\n          chatList: chatList\n        }, \"chat\" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SideVoiceUser, {\n        peersRef: peersRef,\n        peers: peers,\n        chatList: chatList,\n        setChatList: setChatList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n      peers: peers,\n      myNickname: myNickName,\n      chatList: chatList,\n      setChatList: setChatList,\n      socketRef: socketRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Index, \"T+KGpibjPLDQ6Ssv1Q9g+c7zaT0=\");\n\n_c6 = Index;\nexport default _c7 = /*#__PURE__*/memo(Index);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"TextField\");\n$RefreshReg$(_c2, \"Chat\");\n$RefreshReg$(_c3, \"TextFieldWithVoiceUsers\");\n$RefreshReg$(_c4, \"StyledAudio\");\n$RefreshReg$(_c5, \"UserAudio\");\n$RefreshReg$(_c6, \"Index\");\n$RefreshReg$(_c7, \"%default%\");","map":{"version":3,"sources":["/Users/chan/Desktop/Coder/TestFile/startPlayUp/frontend/src/JSC/Component/ChatComponent/index.jsx"],"names":["React","memo","useContext","useEffect","useRef","useState","styled","Message","MyTextInput","Nav","PeerDataContext","UserContext","PeersContext","VoicePeersContext","io","chatAddMessage","connectDataPeer","connectVoicePeer","SideVoiceUser","TextField","div","props","width","Chat","TextFieldWithVoiceUsers","StyledAudio","audio","UserAudio","peers","peer","voiceRef","on","stream","current","srcObject","Index","backgroundColor","height","socketRef","user","peerData","setPeerData","setPeers","voicePeers","setVoicePeers","myNickName","chatList","setChatList","chatListRef","scrollRef","peersRef","voicePeersRef","roomID","scrollToBottom","scrollHeight","clientHeight","scrollTop","connect","myNickname","console","log","map","i","index","nickname"],"mappings":"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","sourcesContent":["import React, { memo, useContext, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components'\nimport Message from './Message'\nimport MyTextInput from \"./MyTextInput\";\nimport Nav from \"./Nav\";\nimport { PeerDataContext, UserContext, PeersContext, VoicePeersContext } from \"../../store\";\nimport io from \"socket.io-client\";\nimport { chatAddMessage } from \"../../Common/ChatModule/addMessage\"\nimport { connectDataPeer } from \"../../Common/peerModule/CreatePeer/createDataPeers\"\nimport { connectVoicePeer } from \"../../Common/peerModule/CreatePeer/createVoicePeers\"\n\n// import { RECEIVE_MESSAGE, socketApi } from \"../../Common/socketModule\";\nimport SideVoiceUser from \"./SideVoiceUser\";\n\nconst TextField = styled.div`\n  display:flex;\n  padding:10px;\n  border: rgb(0, 0, 0);\n  flex-direction: column;\n  overflow-y: scroll;\n  height:${props => props.width || 600}px;\n  width:inherit;\n  border-right:3px solid #ececec;\n  background-color: white;\n  flex-grow:1;\n  \n  &::-webkit-scrollbar{\n    width: 100%;\n    background-color: black;\n  }\n`;\n\nconst Chat = styled.div`\n\n    display:flex;\n    flex-direction: column;\n    height:${props => props.width || 600}px;\n    width:${props => props.width || 600}px;\n    border-radius: 10%;\n`;\n\nconst TextFieldWithVoiceUsers = styled.div`\n      background-color: white;\n      width: inherit;\n      display: flex;\n      flex-direction: row;\n`;\n\nconst StyledAudio = styled.audio`\n    height: 40%;\n    width: 50%;\n    display:none;\n`;\n\nconst UserAudio = ({ peers, peer }) => {\n    const voiceRef = useRef();\n    useEffect(() => {\n        peer.on(\"stream\", stream => {\n            voiceRef.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <StyledAudio playsInline autoPlay ref={voiceRef} />\n    )\n\n}\n\n\nfunction Index({ backgroundColor, height, width, ...props }) {\n    // socket io.connect\n    const socketRef = useRef();\n\n\n    const { user } = useContext(UserContext);\n    const { peerData, setPeerData } = useContext(PeerDataContext);\n    const { peers, setPeers } = useContext(PeersContext);\n    const { voicePeers, setVoicePeers } = useContext(VoicePeersContext);\n\n    // chat nickname\n    const myNickName = user;\n    // chat state for rerendering\n    const [chatList, setChatList] = useState([]);\n    let chatListRef = useRef([...chatList]);\n    // scroll ref;\n    const scrollRef = useRef(null);\n\n    const voiceRef = useRef();\n\n    let peersRef = useRef([]);\n    let voicePeersRef = useRef([]);\n    const roomID = \"9a06eb80-9fd4-11eb-a3e2-377a237cffe7\";\n\n    const scrollToBottom = () => {\n        const { scrollHeight, clientHeight } = scrollRef.current;\n        scrollRef.current.scrollTop = scrollHeight - clientHeight;\n    };\n\n    useEffect(() => {\n        socketRef.current = io.connect(\"/\");\n        // connectPeer({ socketRef, peersRef, roomID, peers, setPeers, chatList, chatListRef, setChatList, myNickname: user, peerData, setPeerData, voiceRef });\n        // let result = true;\n        // result = connectDataPeer({ socketRef, roomID, peersRef, setPeers, chatListRef, setChatList, myNickname: user, setPeerData });\n        // result && connectVoicePeer({ socketRef, voicePeersRef, roomID: roomID + \"-Voice\", setVoicePeers, myNickname: user });\n        connectDataPeer({ socketRef, roomID, peersRef, setPeers, chatListRef, setChatList, myNickname: user, setPeerData });\n        connectVoicePeer({ socketRef, voicePeersRef, roomID: roomID + \"-Voice\", setVoicePeers, myNickname: user });\n        // 방법 1 테스트 해보기.\n        // return () => peersRef.current.forEach(i => {\n        //     console.log(\"destroy peer\", i);\n        //     i.peer.removeAllListeners();\n        //     i.peer.destroy();\n        // })\n        // 방법 2 테스트 해보기.\n        // return () => {\n        //     setPeers({});\n        // }\n    }, []);\n\n    console.log(\"asdf\", chatList)\n    useEffect(() => {\n        scrollToBottom();\n        chatListRef.current = [...chatList];\n    }, [chatList]);\n\n\n    return (\n        <Chat width={height} height={width}>\n            <Nav />\n            <TextFieldWithVoiceUsers>\n                <TextField className=\"textField\" ref={scrollRef}>\n                    {chatList.map((i, index) => <Message key={\"chat\" + index}\n                        who={i.nickname === myNickName ? \"me\" : \"another\"}\n                        chatObject={i} chatList={chatList} />)}\n                </TextField>\n                <SideVoiceUser peersRef={peersRef} peers={peers} chatList={chatList} setChatList={setChatList} />\n            </TextFieldWithVoiceUsers>\n            <MyTextInput peers={peers} myNickname={myNickName} chatList={chatList} setChatList={setChatList}\n                socketRef={socketRef} />\n\n        </Chat>\n    );\n}\n\nexport default memo(Index);\n"]},"metadata":{},"sourceType":"module"}