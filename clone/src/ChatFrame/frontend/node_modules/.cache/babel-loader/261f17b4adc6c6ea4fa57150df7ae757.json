{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Desktop/Coder/TestFile/startPlayUp/frontend/src/JSC/Component/GameComponent/RockPaperScissors.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, memo } from 'react';\nimport { PeerDataContext, PeersContext, UserContext } from '../../store';\nimport scissors from './../../image/가위.jpg';\nimport rock from './../../image/바위.jpg';\nimport paper from './../../image/보.jpg';\nimport styled from \"styled-components\";\nimport { PEER_ROCK_PAPER_SCISSORS } from \"../../Constants/peerDataTypes\";\nimport { sendDataToPeers } from '../../Common/peerModule/sendToPeers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageButton = styled.button`\n    width: 100px;\n    height: 100px;\n`;\n_c = ImageButton;\nconst Img = styled.img`\n    width: 100px;\n    height: 100px;\n`;\n_c2 = Img;\nconst GameField = styled.div`\n    background:white;\n`;\n_c3 = GameField;\n\nconst App = () => {\n  _s();\n\n  const RockPaperScissorsData = {\n    'scissors': [1, scissors],\n    'rock': [0, rock],\n    'paper': [-1, paper]\n  };\n  const {\n    peerData,\n    setpeerData\n  } = useContext(PeerDataContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const [selectData, setSelectData] = useState(\"\");\n  const {\n    peers\n  } = useContext(PeersContext);\n\n  const selectDataHandler = data => {\n    let tmp;\n    let success = undefined;\n\n    if (data === 1) {\n      tmp = \"scissors\";\n    } else if (data === 0) {\n      tmp = \"rock\";\n    } else {\n      tmp = \"paper\";\n    }\n\n    success = sendDataToPeers(PEER_ROCK_PAPER_SCISSORS, {\n      nickname: user,\n      data: tmp,\n      peers\n    });\n    success === true && peers.length && setSelectData(tmp);\n  };\n\n  const PrintResult = () => {\n    const differnceOfData = RockPaperScissorsData[selectData][0] - RockPaperScissorsData[peerData][0];\n    let result = \"\";\n\n    if (differnceOfData === 0) {\n      result = \"비김\";\n    } else if ([-1, 2].includes(differnceOfData)) {\n      result = '이김';\n    } else {\n      result = '짐';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uACB0\\uACFC\\uB294 : \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GameField, {\n    children: [(peerData === undefined || selectData === \"\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC0C1\\uB300\\uAC00 \\uC120\\uD0DD\\uD558\\uC9C0 \\uC54A\\uC558\\uAC70\\uB098 \\uBCF8\\uC778\\uC774 \\uC120\\uD0DD\\uD558\\uC9C0 \\uC54A\\uC74C.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 63\n    }, this), peerData !== undefined && selectData !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC0C1\\uB300\\uAC00 \\uB0B8 \\uAC83 : \", peerData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 63\n    }, this), selectData === \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uBCF8\\uC778 \\uC544\\uC9C1 \\uC120\\uD0DD \\uC548\\uD568.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 35\n    }, this), selectData !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uBCF8\\uC778\\uC774 \\uB0B8 \\uAC83 : \", selectData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 35\n    }, this), Object.values(RockPaperScissorsData).map(i => {\n      return /*#__PURE__*/_jsxDEV(ImageButton, {\n        onClick: () => selectDataHandler(i[0]),\n        children: /*#__PURE__*/_jsxDEV(Img, {\n          src: i[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, i[1], false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 28\n      }, this);\n    }), peerData !== undefined && selectData !== \"\" && /*#__PURE__*/_jsxDEV(PrintResult, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 63\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"lrYmHXEFY1+W/uPW1RbQd7onsW0=\");\n\n_c4 = App;\nexport default _c5 = /*#__PURE__*/memo(App);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ImageButton\");\n$RefreshReg$(_c2, \"Img\");\n$RefreshReg$(_c3, \"GameField\");\n$RefreshReg$(_c4, \"App\");\n$RefreshReg$(_c5, \"%default%\");","map":{"version":3,"sources":["/Users/chan/Desktop/Coder/TestFile/startPlayUp/frontend/src/JSC/Component/GameComponent/RockPaperScissors.jsx"],"names":["React","useContext","useState","memo","PeerDataContext","PeersContext","UserContext","scissors","rock","paper","styled","PEER_ROCK_PAPER_SCISSORS","sendDataToPeers","ImageButton","button","Img","img","GameField","div","App","RockPaperScissorsData","peerData","setpeerData","user","selectData","setSelectData","peers","selectDataHandler","data","tmp","success","undefined","nickname","length","PrintResult","differnceOfData","result","includes","Object","values","map","i"],"mappings":"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","sourcesContent":["import React, { useContext, useState, memo } from 'react';\nimport { PeerDataContext, PeersContext, UserContext } from '../../store';\nimport scissors from './../../image/가위.jpg'\nimport rock from './../../image/바위.jpg'\nimport paper from './../../image/보.jpg'\nimport styled from \"styled-components\"\nimport { PEER_ROCK_PAPER_SCISSORS } from \"../../Constants/peerDataTypes\";\nimport { sendDataToPeers } from '../../Common/peerModule/sendToPeers'\n\nconst ImageButton = styled.button`\n    width: 100px;\n    height: 100px;\n`;\n\n\nconst Img = styled.img`\n    width: 100px;\n    height: 100px;\n`;\n\n\nconst GameField = styled.div`\n    background:white;\n`;\n\n\n\nconst App = () => {\n    const RockPaperScissorsData = {\n        'scissors': [1, scissors],\n        'rock': [0, rock],\n        'paper': [-1, paper],\n    };\n    const { peerData, setpeerData } = useContext(PeerDataContext);\n    const { user } = useContext(UserContext);\n    const [selectData, setSelectData] = useState(\"\");\n    const { peers } = useContext(PeersContext);\n\n\n    const selectDataHandler = (data) => {\n        let tmp;\n        let success = undefined;\n        if (data === 1) {\n            tmp = \"scissors\"\n        }\n        else if (data === 0) {\n            tmp = \"rock\"\n        }\n        else {\n            tmp = \"paper\"\n        }\n        success = sendDataToPeers(PEER_ROCK_PAPER_SCISSORS, { nickname: user, data: tmp, peers });\n        success === true && peers.length && setSelectData(tmp);\n    }\n    const PrintResult = () => {\n        const differnceOfData = RockPaperScissorsData[selectData][0] - RockPaperScissorsData[peerData][0];\n        let result = \"\";\n        if (differnceOfData === 0) {\n            result = \"비김\"\n        }\n        else if ([-1, 2].includes(differnceOfData)) {\n            result = '이김'\n        }\n        else {\n            result = '짐'\n        }\n        return <div>결과는 : {result}</div>\n    }\n\n\n    return (\n        <GameField>\n            {(peerData === undefined || selectData === \"\") && <div>상대가 선택하지 않았거나 본인이 선택하지 않음.</div>}\n            {(peerData !== undefined && selectData !== \"\") && <div>상대가 낸 것 : {peerData}</div>}\n            {selectData === \"\" && <div>본인 아직 선택 안함.</div>}\n            {selectData !== \"\" && <div>본인이 낸 것 : {selectData}</div>}\n            {\n                Object.values(RockPaperScissorsData).map((i) => {\n                    return <ImageButton key={i[1]} onClick={() => selectDataHandler(i[0])}>\n                        <Img src={i[1]} />\n                    </ImageButton>\n                })\n            }\n            {(peerData !== undefined && selectData !== \"\") && <PrintResult />}\n        </GameField >\n    )\n}\nexport default memo(App);"]},"metadata":{},"sourceType":"module"}