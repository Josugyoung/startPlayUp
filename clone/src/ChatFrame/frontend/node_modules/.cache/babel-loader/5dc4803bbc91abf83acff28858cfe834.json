{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Desktop/Coder/TestFile/startPlayUp/frontend/src/JSC/Component/ChatComponent/MyTextInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState } from 'react';\nimport styled from \"styled-components\";\nimport voicetalk from \"../../icon/voicetalk.svg\";\nimport { sendDataToPeers } from '../../Common/peerModule/sendToPeers';\nimport { chatAddMessage } from \"../../Common/ChatModule/addMessage\";\nimport { PEER_CHAT } from \"../../Constants/peerDataTypes\"; // import { SEND_MESSAGE, socketApi } from \"../../Common/socketModule\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendChat = styled.div`\n   border-top: 3px solid #ececec;\n   height:75px;\n   width:inherit;\n   background-color: rgb(255, 255, 255);\n`;\n_c = SendChat;\nconst FieldSet = styled.div`\n    display:flex;\n    flex-direction: row;\n`;\n_c2 = FieldSet;\nconst FieldInput = styled.input`\n    width:100%;\n    height:30px;\n    border:3px solid #ececec; /* <input> 태그 테두리 삭제*/\n    border-radius:30px;\n    margin:5px 10px 5px 10px;\n`;\n_c3 = FieldInput;\nconst FieldSetBtn = styled.button`\n    margin:10px;\n    display:flex;\n    align-items: center; /* 세로축 중앙 가로축 중앙 맞춤*/\n    justify-content: center;\n    width:60px;\n    height:25px;\n    overflow:hidden;\n    background-color: ${props => props.disabled === false ? \"rgb(208,208,208)\" : \"rgb(150,150,150)\"};\n    color:white;\n    border:none;\n    border-radius: 30px;\n    box-shadow: 0.2px 0.2px 0.1px 0.1px rgba(163, 167, 162, 0.774); /*그림자 만들기*/\n    cursor:pointer;    \n`;\n_c4 = FieldSetBtn;\nconst SendMenuButtons = styled.div`\n    display:flex;\n    flex-direction: row;\n    justify-content: space-around; /*임시로 크기 정해주고 위치 맞춤*/\n    align-items: center;\n`;\n_c5 = SendMenuButtons;\nconst SendMenuButton = styled.button`\n    border:0;\n    outline:0;\n    background-color: white;\n    cursor: pointer;\n    width:20%;\n`;\n_c6 = SendMenuButton;\n\nconst makeSendMediaButton = mediaBtn => {\n  return /*#__PURE__*/_jsxDEV(SendMenuButtons, {\n    className: \"sendMenuBtn\",\n    children: mediaBtn.map((i, index) => /*#__PURE__*/_jsxDEV(SendMenuButton, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 59\n      }, this)\n    }, mediaBtn[index], false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\nconst MyTextInput = ({\n  chatList,\n  setChatList,\n  myNickname,\n  socketRef,\n  peers\n}) => {\n  _s();\n\n  const [inputMessage, setInputMessage] = useState(\"\");\n\n  const InputMessageChangeHandler = e => {\n    e.preventDefault();\n    inputMessage.length > 30 || setInputMessage(e.target.value); // 30글자 제한해야함.\n  };\n\n  const fieldSetButtonHandler = e => {\n    // 텍스트가 들어있으면 버튼이 활성화 핸들러\n    e.preventDefault();\n    let success = undefined;\n    success = sendDataToPeers(PEER_CHAT, {\n      nickname: myNickname,\n      data: inputMessage,\n      peers\n    });\n\n    if (success) {\n      chatAddMessage({\n        nickname: myNickname,\n        inputMessage,\n        chatList,\n        setChatList\n      });\n      setInputMessage(\"\");\n    } else {\n      console.log(\"채팅 전송 실패\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SendChat, {\n    className: \"sendChat\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sendForm\",\n      name: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(FieldSet, {\n        className: \"fieldSet\",\n        children: [/*#__PURE__*/_jsxDEV(FieldInput, {\n          value: inputMessage,\n          onChange: InputMessageChangeHandler,\n          className: \"fieldInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FieldSetBtn, {\n          disabled: !inputMessage,\n          onClick: fieldSetButtonHandler,\n          type: \"submit\",\n          className: \"fieldSetBtn\",\n          children: \"\\uC804\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: makeSendMediaButton([voicetalk])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyTextInput, \"vq066uhM5pxuBNnlo0LUbP9dMWM=\");\n\n_c7 = MyTextInput;\nexport default _c8 = /*#__PURE__*/memo(MyTextInput);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"SendChat\");\n$RefreshReg$(_c2, \"FieldSet\");\n$RefreshReg$(_c3, \"FieldInput\");\n$RefreshReg$(_c4, \"FieldSetBtn\");\n$RefreshReg$(_c5, \"SendMenuButtons\");\n$RefreshReg$(_c6, \"SendMenuButton\");\n$RefreshReg$(_c7, \"MyTextInput\");\n$RefreshReg$(_c8, \"%default%\");","map":{"version":3,"sources":["/Users/chan/Desktop/Coder/TestFile/startPlayUp/frontend/src/JSC/Component/ChatComponent/MyTextInput.jsx"],"names":["React","memo","useState","styled","sendDataToPeers","chatAddMessage","PEER_CHAT","SendChat","div","FieldSet","FieldInput","input","FieldSetBtn","button","props","disabled","SendMenuButtons","SendMenuButton","makeSendMediaButton","mediaBtn","map","i","index","MyTextInput","chatList","setChatList","myNickname","socketRef","peers","inputMessage","setInputMessage","InputMessageChangeHandler","e","preventDefault","length","target","value","fieldSetButtonHandler","success","undefined","nickname","data","console","log","voicetalk"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\nimport styled from \"styled-components\";\nimport voicetalk from \"../../icon/voicetalk.svg\";\nimport { sendDataToPeers } from '../../Common/peerModule/sendToPeers'\nimport { chatAddMessage } from \"../../Common/ChatModule/addMessage\"\nimport { PEER_CHAT } from \"../../Constants/peerDataTypes\";\n\n// import { SEND_MESSAGE, socketApi } from \"../../Common/socketModule\";\n\nconst SendChat = styled.div`\n   border-top: 3px solid #ececec;\n   height:75px;\n   width:inherit;\n   background-color: rgb(255, 255, 255);\n`;\n\nconst FieldSet = styled.div`\n    display:flex;\n    flex-direction: row;\n`;\n\nconst FieldInput = styled.input`\n    width:100%;\n    height:30px;\n    border:3px solid #ececec; /* <input> 태그 테두리 삭제*/\n    border-radius:30px;\n    margin:5px 10px 5px 10px;\n`;\n\nconst FieldSetBtn = styled.button`\n    margin:10px;\n    display:flex;\n    align-items: center; /* 세로축 중앙 가로축 중앙 맞춤*/\n    justify-content: center;\n    width:60px;\n    height:25px;\n    overflow:hidden;\n    background-color: ${props => props.disabled === false ? \"rgb(208,208,208)\" : \"rgb(150,150,150)\"};\n    color:white;\n    border:none;\n    border-radius: 30px;\n    box-shadow: 0.2px 0.2px 0.1px 0.1px rgba(163, 167, 162, 0.774); /*그림자 만들기*/\n    cursor:pointer;    \n`;\n\n\nconst SendMenuButtons = styled.div`\n    display:flex;\n    flex-direction: row;\n    justify-content: space-around; /*임시로 크기 정해주고 위치 맞춤*/\n    align-items: center;\n`;\n\nconst SendMenuButton = styled.button`\n    border:0;\n    outline:0;\n    background-color: white;\n    cursor: pointer;\n    width:20%;\n`;\n\n\nconst makeSendMediaButton = (mediaBtn) => {\n    return (\n        <SendMenuButtons className=\"sendMenuBtn\">\n            {\n                mediaBtn.map((i, index) =>\n                    <SendMenuButton key={mediaBtn[index]}><img src={i} /></SendMenuButton>\n                )\n            }\n        </SendMenuButtons>\n    )\n};\n\n\nconst MyTextInput = ({ chatList, setChatList, myNickname, socketRef, peers }) => {\n    const [inputMessage, setInputMessage] = useState(\"\");\n    const InputMessageChangeHandler = (e) => {\n        e.preventDefault();\n        inputMessage.length > 30 || setInputMessage(e.target.value); // 30글자 제한해야함.\n    };\n\n    const fieldSetButtonHandler = (e) => { // 텍스트가 들어있으면 버튼이 활성화 핸들러\n        e.preventDefault();\n        let success = undefined;\n        success = sendDataToPeers(PEER_CHAT, { nickname: myNickname, data: inputMessage, peers });\n        if (success) {\n            chatAddMessage({ nickname: myNickname, inputMessage, chatList, setChatList });\n            setInputMessage(\"\");\n        }\n        else {\n            console.log(\"채팅 전송 실패\");\n        }\n    };\n\n    return (\n        <SendChat className=\"sendChat\">\n            <form className=\"sendForm\" name=\"chat\">\n                <FieldSet className=\"fieldSet\">\n                    <FieldInput value={inputMessage} onChange={InputMessageChangeHandler} className=\"fieldInput\" />\n                    <FieldSetBtn disabled={!inputMessage} onClick={fieldSetButtonHandler} type='submit'\n                        className=\"fieldSetBtn\">전송</FieldSetBtn>\n                </FieldSet>\n                <div>\n                    {makeSendMediaButton([voicetalk])}\n                </div>\n            </form>\n        </SendChat>\n    );\n}\n\nexport default memo(MyTextInput);\n"]},"metadata":{},"sourceType":"module"}