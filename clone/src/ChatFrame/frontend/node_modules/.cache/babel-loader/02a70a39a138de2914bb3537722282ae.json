{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Desktop/Coder/TestFile/startPlayUp/frontend/src/JSC/store.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useMemo, useReducer, useState, useRef, useEffect, memo, Children } from \"react\";\nimport { LOGIN, GET_CHATLIST, SET_CHATLIST } from './Constants/actionTypes';\nimport { testDB } from \"./Common/TestDB\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: \"\",\n  isAuthenticated: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case LOGIN:\n      const res = testDB.filter(i => i.id === action.id && i.password === action.password);\n      console.log(\"[DEBUG] : STORE LOGIN\");\n\n      if (res.length > 0) {\n        action.history.push(\"/chat\");\n        return { ...state,\n          user: res[0].nickname,\n          isAuthenticated: true\n        };\n      } else {\n        return { ...state,\n          user: \"Guest\"\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const UserContext = /*#__PURE__*/createContext({\n  user: \"\",\n  isAuthenticated: false,\n  dispatch: () => {}\n});\nexport const PeerDataContext = /*#__PURE__*/createContext({\n  peerData: \"\",\n  setpeerData: \"\"\n});\nexport const PeersContext = /*#__PURE__*/createContext([]);\nexport const VoicePeersContext = /*#__PURE__*/createContext([]); //// 하드코딩 하니 된다??? public html 파일에 <audio></audio> 태그 추가 후 사용함.\n// const UserAudio = ({ voicePeers, peer }) => {\n//     const voiceRef = useRef();\n//     const streamRef = useRef(undefined);\n//     useEffect(() => {\n//         peer.on(\"stream\", stream => {\n//             // voiceRef.current.srcObject = stream;\n//             // streamRef.current = stream;\n//             var audio = document.querySelector('audio')\n//             if ('srcObject' in audio) {\n//                 audio.srcObject = stream\n//             } else {\n//                 audio.src = window.URL.createObjectURL(stream) // for older browsers\n//             }\n//             audio.play();\n//         })\n//     }, []);\n//     // useEffect(() => {\n//     //     voiceRef.current.srcObject = streamRef.current;\n//     // }, [voicePeers]);\n//     return (<></>\n//         // <StyledAudio playsInline autoPlay ref={voiceRef} />\n//     )\n// }\n// const UserAudio = ({ voicePeers, peer }) => {\n//     const voiceRef = useRef();\n//     const streamRef = useRef(undefined);\n//     useEffect(() => {\n//         peer.on(\"stream\", stream => {\n//             voiceRef.current.srcObject = stream;\n//             streamRef.current = stream;\n//         })\n//     }, []);\n//     return (\n//         <StyledAudio playsInline autoPlay ref={voiceRef} />\n//     )\n// }\n\nconst StyledAudio = styled.audio`\n    display:none;\n`;\n_c = StyledAudio;\n\nconst Audio = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return props.peer.readable && /*#__PURE__*/_jsxDEV(StyledAudio, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 32\n  }, this);\n};\n\n_s(Audio, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c2 = Audio;\nexport const Store = ({\n  children\n}) => {\n  _s2();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    user,\n    isAuthenticated\n  } = state;\n  const [peerData, setPeerData] = useState();\n  const [peers, setPeers] = useState([]);\n  const [voicePeers, setVoicePeers] = useState([]);\n  const value = useMemo(() => ({\n    user: user,\n    isAuthenticated: isAuthenticated,\n    dispatch: dispatch\n  }), [user, isAuthenticated]); // dispatch는 실행중 변경하지 않기에 useMemo를 통해 제함.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(\"voice Peers\", voicePeers), voicePeers.map(({\n      peer\n    }, index) => {\n      return /*#__PURE__*/_jsxDEV(Audio, {\n        peer: peer,\n        peers: voicePeers\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: value,\n      children: /*#__PURE__*/_jsxDEV(PeerDataContext.Provider, {\n        value: {\n          peerData,\n          setPeerData\n        },\n        children: /*#__PURE__*/_jsxDEV(PeersContext.Provider, {\n          value: {\n            peers,\n            setPeers\n          },\n          children: /*#__PURE__*/_jsxDEV(VoicePeersContext.Provider, {\n            value: {\n              voicePeers,\n              setVoicePeers\n            },\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Store, \"ZGeX3vH66AAc/vs8y/rdMMbl0is=\");\n\n_c3 = Store;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledAudio\");\n$RefreshReg$(_c2, \"Audio\");\n$RefreshReg$(_c3, \"Store\");","map":{"version":3,"sources":["/Users/chan/Desktop/Coder/TestFile/startPlayUp/frontend/src/JSC/store.js"],"names":["React","createContext","useMemo","useReducer","useState","useRef","useEffect","memo","Children","LOGIN","GET_CHATLIST","SET_CHATLIST","testDB","styled","initialState","user","isAuthenticated","reducer","state","action","type","res","filter","i","id","password","console","log","length","history","push","nickname","UserContext","dispatch","PeerDataContext","peerData","setpeerData","PeersContext","VoicePeersContext","StyledAudio","audio","Audio","props","ref","peer","on","stream","current","srcObject","readable","Store","children","setPeerData","peers","setPeers","voicePeers","setVoicePeers","value","map","index"],"mappings":"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","sourcesContent":["import React, { createContext, useMemo, useReducer, useState, useRef, useEffect, memo, Children } from \"react\";\nimport { LOGIN, GET_CHATLIST, SET_CHATLIST } from './Constants/actionTypes';\nimport { testDB } from \"./Common/TestDB\";\nimport styled from 'styled-components'\n\n\nconst initialState = {\n    user: \"\",\n    isAuthenticated: false,\n};\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case LOGIN:\n            const res = testDB.filter((i) => i.id === action.id && i.password === action.password);\n            console.log(\"[DEBUG] : STORE LOGIN\");\n            if (res.length > 0) {\n                action.history.push(\"/chat\");\n                return {\n                    ...state,\n                    user: res[0].nickname,\n                    isAuthenticated: true\n                }\n            } else {\n                return {\n                    ...state,\n                    user: \"Guest\"\n                };\n            }\n        default:\n            return state;\n    }\n};\nexport const UserContext = createContext({\n    user: \"\",\n    isAuthenticated: false,\n    dispatch: () => { }\n});\n\nexport const PeerDataContext = createContext({\n    peerData: \"\",\n    setpeerData: \"\"\n});\n\nexport const PeersContext = createContext([]);\nexport const VoicePeersContext = createContext([]);\n\n//// 하드코딩 하니 된다??? public html 파일에 <audio></audio> 태그 추가 후 사용함.\n// const UserAudio = ({ voicePeers, peer }) => {\n//     const voiceRef = useRef();\n//     const streamRef = useRef(undefined);\n//     useEffect(() => {\n//         peer.on(\"stream\", stream => {\n//             // voiceRef.current.srcObject = stream;\n//             // streamRef.current = stream;\n//             var audio = document.querySelector('audio')\n//             if ('srcObject' in audio) {\n//                 audio.srcObject = stream\n//             } else {\n//                 audio.src = window.URL.createObjectURL(stream) // for older browsers\n//             }\n//             audio.play();\n//         })\n//     }, []);\n//     // useEffect(() => {\n//     //     voiceRef.current.srcObject = streamRef.current;\n//     // }, [voicePeers]);\n\n//     return (<></>\n//         // <StyledAudio playsInline autoPlay ref={voiceRef} />\n//     )\n// }\n\n\n// const UserAudio = ({ voicePeers, peer }) => {\n//     const voiceRef = useRef();\n//     const streamRef = useRef(undefined);\n//     useEffect(() => {\n//         peer.on(\"stream\", stream => {\n//             voiceRef.current.srcObject = stream;\n//             streamRef.current = stream;\n//         })\n//     }, []);\n//     return (\n//         <StyledAudio playsInline autoPlay ref={voiceRef} />\n//     )\n// }\n\n\nconst StyledAudio = styled.audio`\n    display:none;\n`;\n\n\nconst Audio = (props) => {\n    const ref = useRef();\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n    return (\n        props.peer.readable && <StyledAudio playsInline autoPlay ref={ref} />\n    );\n}\n\n\nexport const Store = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const { user, isAuthenticated } = state;\n    const [peerData, setPeerData] = useState();\n    const [peers, setPeers] = useState([]);\n    const [voicePeers, setVoicePeers] = useState([]);\n    const value = useMemo(() => ({\n        user: user,\n        isAuthenticated: isAuthenticated,\n        dispatch: dispatch\n    }), [user, isAuthenticated]);\n    // dispatch는 실행중 변경하지 않기에 useMemo를 통해 제함.\n\n    return (\n        <>\n            {console.log(\"voice Peers\", voicePeers)}\n            {\n                voicePeers.map(({ peer }, index) => {\n                    return (\n                        <Audio key={index} peer={peer} peers={voicePeers} />\n                    );\n                })\n            }\n            <UserContext.Provider value={value}>\n                <PeerDataContext.Provider value={{ peerData, setPeerData }}>\n                    <PeersContext.Provider value={{ peers, setPeers }}>\n                        <VoicePeersContext.Provider value={{ voicePeers, setVoicePeers }}>\n                            {children}\n                        </VoicePeersContext.Provider>\n                    </PeersContext.Provider>\n                </PeerDataContext.Provider>\n            </UserContext.Provider >\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}