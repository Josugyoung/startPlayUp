{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Desktop/Coder/StartPlayUp/StartPlay-Jsc1/frontend/src/JSC/store.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useMemo, useReducer } from \"react\";\nimport Container from './Container';\nimport { LOGIN } from './Constants/actionTypes';\nimport { testDB } from \"./Common/testDB\";\nimport { Route } from 'react-router-dom';\nimport LoginPageContainer from \"./Container/LoginPageContainer\";\nimport ChatContainer from \"./Container/ChatContainer\";\nimport ChatComponent from \"./Component/ChatComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: \"\",\n  isAuthenticated: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case LOGIN:\n      const res = testDB.filter(i => i.id === action.id && i.password === action.password);\n      console.log(\"[DEBUG] : STORE LOGIN\");\n\n      if (res.length > 0) {\n        action.history.push(\"/chat\");\n        return { ...state,\n          user: res[0].nickname,\n          isAuthenticated: true\n        };\n      } else {\n        return { ...state,\n          user: \"Guest\"\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const UserContext = /*#__PURE__*/createContext({// user: \"\",\n  // isAuthenticated: false,\n  // dispatch: () => {\n  // }\n});\n\nfunction store() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    user,\n    isAuthenticated\n  } = state;\n  const value = useMemo(() => ({\n    user: user,\n    isAuthenticated: isAuthenticated,\n    dispatch: dispatch\n  }), [user, isAuthenticated]); // dispatch는 실행중 변경하지 않기에 useMemo를 통해 제함.\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      component: ChatContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/login\",\n      component: LoginPageContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/chat\",\n      component: ChatComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(store, \"qvH2RyWsybU3q3wEgwaMp2xbVH0=\");\n\nexport default store;","map":{"version":3,"sources":["/Users/chan/Desktop/Coder/StartPlayUp/StartPlay-Jsc1/frontend/src/JSC/store.js"],"names":["React","createContext","useMemo","useReducer","Container","LOGIN","testDB","Route","LoginPageContainer","ChatContainer","ChatComponent","initialState","user","isAuthenticated","reducer","state","action","type","res","filter","i","id","password","console","log","length","history","push","nickname","UserContext","store","dispatch","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,OAA9B,EAAuCC,UAAvC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,yBAApB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,eAAe,EAAE;AAFA,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,KAAL;AACI,YAAMa,GAAG,GAAGZ,MAAM,CAACa,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACK,EAAhB,IAAsBD,CAAC,CAACE,QAAF,KAAeN,MAAM,CAACM,QAAjE,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,UAAIN,GAAG,CAACO,MAAJ,GAAa,CAAjB,EAAoB;AAChBT,QAAAA,MAAM,CAACU,OAAP,CAAeC,IAAf,CAAoB,OAApB;AACA,eAAO,EACH,GAAGZ,KADA;AAEHH,UAAAA,IAAI,EAAEM,GAAG,CAAC,CAAD,CAAH,CAAOU,QAFV;AAGHf,UAAAA,eAAe,EAAE;AAHd,SAAP;AAKH,OAPD,MAOO;AACH,eAAO,EACH,GAAGE,KADA;AAEHH,UAAAA,IAAI,EAAE;AAFH,SAAP;AAIH;;AAEL;AACI,aAAOG,KAAP;AAnBR;AAqBH,CAtBD;;AAuBA,OAAO,MAAMc,WAAW,gBAAG5B,aAAa,CAAC,CACrC;AACA;AACA;AACA;AAJqC,CAAD,CAAjC;;AAOP,SAAS6B,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoB5B,UAAU,CAACW,OAAD,EAAUH,YAAV,CAApC;AACA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAA0BE,KAAhC;AACA,QAAMiB,KAAK,GAAG9B,OAAO,CAAC,OAAO;AACzBU,IAAAA,IAAI,EAAEA,IADmB;AAEzBC,IAAAA,eAAe,EAAEA,eAFQ;AAGzBkB,IAAAA,QAAQ,EAAEA;AAHe,GAAP,CAAD,EAIjB,CAACnB,IAAD,EAAOC,eAAP,CAJiB,CAArB,CAHa,CAQb;;AACA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEmB,KAA7B;AAAA,4BACI,QAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAiB,MAAA,SAAS,EAAEvB;AAA5B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAED;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKK,eAAe,iBAAI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAEH;AAArC;AAAA;AAAA;AAAA;AAAA,YAHxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAhBQoB,K;;AAkBT,eAAeA,KAAf","sourcesContent":["import React, {createContext, useMemo, useReducer} from \"react\";\nimport Container from './Container';\nimport {LOGIN} from './Constants/actionTypes';\nimport {testDB} from \"./Common/testDB\";\nimport { Route } from 'react-router-dom';\nimport LoginPageContainer from \"./Container/LoginPageContainer\";\nimport ChatContainer from \"./Container/ChatContainer\";\nimport ChatComponent from \"./Component/ChatComponent\";\n\n\nconst initialState = {\n    user: \"\",\n    isAuthenticated: false,\n};\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case LOGIN:\n            const res = testDB.filter((i) => i.id === action.id && i.password === action.password);\n            console.log(\"[DEBUG] : STORE LOGIN\");\n            if (res.length > 0) {\n                action.history.push(\"/chat\");\n                return {\n                    ...state,\n                    user: res[0].nickname,\n                    isAuthenticated: true\n                }\n            } else {\n                return {\n                    ...state,\n                    user: \"Guest\"\n                };\n            }\n\n        default:\n            return state;\n    }\n};\nexport const UserContext = createContext({\n    // user: \"\",\n    // isAuthenticated: false,\n    // dispatch: () => {\n    // }\n});\n\nfunction store() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const {user, isAuthenticated} = state;\n    const value = useMemo(() => ({\n        user: user,\n        isAuthenticated: isAuthenticated,\n        dispatch: dispatch\n    }), [user, isAuthenticated]);\n    // dispatch는 실행중 변경하지 않기에 useMemo를 통해 제함.\n    return (\n        <UserContext.Provider value={value}>\n            <Route  path=\"/\" component={ChatContainer}/>\n            <Route exact path=\"/login\" component={LoginPageContainer}/>\n            {isAuthenticated && <Route exact path=\"/chat\" component={ChatComponent}/>}\n        </UserContext.Provider>\n    );\n}\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}