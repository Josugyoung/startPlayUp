{"ast":null,"code":"export const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE'; // export const YACHU_DICE_DATA_SEND = 'YACHU_DICE_DATA_SEND';\n// export const YACHU_DICE_DATA_RECEIVE = 'YACHU_DICE_DATA_RECEIVE';\n// export const YACHU_DATA_RECONNECT = 'YACHU_DATA_RECONNECT';\n\nexport const socketApi = (type, {\n  socketRef,\n  message,\n  nickname,\n  chatList,\n  setChatList,\n  socketOnOff = true\n}, callback = \"\") => {\n  if (socketOnOff) {\n    switch (type) {\n      case SEND_MESSAGE:\n        console.log(\"[Debug] socketApi in\");\n        socketRef.current.emit(SEND_MESSAGE, nickname, message);\n        break;\n\n      case RECEIVE_MESSAGE:\n        socketRef.current.on(RECEIVE_MESSAGE, (nickname, message) => {\n          console.log(\"[DEBUG] receive_message on\");\n          callback({\n            nickname,\n            inputMessage: message,\n            chatList,\n            setChatList\n          });\n        });\n        break;\n\n      default:\n        return;\n    }\n  } else {\n    switch (type) {\n      case RECEIVE_MESSAGE:\n        console.log(\"[DEBUG] receive_message off\");\n        socketRef.current.off(RECEIVE_MESSAGE);\n        break;\n\n      default:\n        return;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/chan/Desktop/Coder/StartPlayUp/StartPlay-Jsc1/frontend/src/JSC/Common/socketApi/index.js"],"names":["SEND_MESSAGE","RECEIVE_MESSAGE","socketApi","type","socketRef","message","nickname","chatList","setChatList","socketOnOff","callback","console","log","current","emit","on","inputMessage","off"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CACP;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAO;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA,QAA/B;AAAyCC,EAAAA,WAAzC;AAAsDC,EAAAA,WAAW,GAAG;AAApE,CAAP,EAAkFC,QAAQ,GAAG,EAA7F,KAAoG;AACzH,MAAID,WAAJ,EAAiB;AACb,YAAQN,IAAR;AACI,WAAKH,YAAL;AACIW,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAR,QAAAA,SAAS,CAACS,OAAV,CAAkBC,IAAlB,CAAuBd,YAAvB,EAAqCM,QAArC,EAA+CD,OAA/C;AACA;;AACJ,WAAKJ,eAAL;AACIG,QAAAA,SAAS,CAACS,OAAV,CAAkBE,EAAlB,CAAqBd,eAArB,EAAsC,CAACK,QAAD,EAAWD,OAAX,KAAuB;AACzDM,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAF,UAAAA,QAAQ,CAAC;AAACJ,YAAAA,QAAD;AAAWU,YAAAA,YAAY,EAAEX,OAAzB;AAAkCE,YAAAA,QAAlC;AAA4CC,YAAAA;AAA5C,WAAD,CAAR;AACH,SAHD;AAIA;;AACJ;AACI;AAZR;AAcH,GAfD,MAeO;AACH,YAAQL,IAAR;AACI,WAAKF,eAAL;AACIU,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAR,QAAAA,SAAS,CAACS,OAAV,CAAkBI,GAAlB,CAAsBhB,eAAtB;AACA;;AACJ;AACI;AANR;AAQH;AACJ,CA1BM","sourcesContent":["export const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE';\n// export const YACHU_DICE_DATA_SEND = 'YACHU_DICE_DATA_SEND';\n// export const YACHU_DICE_DATA_RECEIVE = 'YACHU_DICE_DATA_RECEIVE';\n// export const YACHU_DATA_RECONNECT = 'YACHU_DATA_RECONNECT';\n\nexport const socketApi = (type, {socketRef, message, nickname, chatList, setChatList, socketOnOff = true}, callback = \"\") => {\n    if (socketOnOff) {\n        switch (type) {\n            case SEND_MESSAGE:\n                console.log(\"[Debug] socketApi in\")\n                socketRef.current.emit(SEND_MESSAGE, nickname, message);\n                break;\n            case RECEIVE_MESSAGE:\n                socketRef.current.on(RECEIVE_MESSAGE, (nickname, message) => {\n                    console.log(\"[DEBUG] receive_message on\");\n                    callback({nickname, inputMessage: message, chatList, setChatList});\n                });\n                break;\n            default:\n                return;\n        }\n    } else {\n        switch (type) {\n            case RECEIVE_MESSAGE:\n                console.log(\"[DEBUG] receive_message off\");\n                socketRef.current.off(RECEIVE_MESSAGE);\n                break;\n            default:\n                return;\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}