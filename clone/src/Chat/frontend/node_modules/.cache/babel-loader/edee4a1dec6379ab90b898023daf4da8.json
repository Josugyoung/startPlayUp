{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Desktop/Coder/StartPlayUp/StartPlay-Jsc1/frontend/src/JSC/Component/ChatComponent/SideVoiceUser.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Side = styled.div`\n    height:${props => props.width || 600}px;\n    width:${props => props.width || 100}px;\n    margin-top:10px;\n    margin-bottom:10px;\n    padding:0px 5px 0px 5px;\n`;\nconst Users = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst StyledAudio = styled.audio`\n    height: 40%;\n    width: 50%;\n`;\n_c = StyledAudio;\n\nconst Audio = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledAudio, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Audio, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c2 = Audio;\n\nconst App = ({\n  socketRef\n}) => {\n  _s2();\n\n  const [peers, setPeers] = useState([]); // const socketRef = useRef();\n\n  let peersRef = useRef([]);\n  const roomID = \"9a06eb80-9fd4-11eb-a3e2-377a237cffe7\";\n  useEffect(() => {\n    // socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices.getUserMedia({\n      video: false,\n      audio: true\n    }).then(stream => {\n      socketRef.current.emit(\"join room\", roomID);\n      socketRef.current.on(\"all users\", users => {\n        const peers = [];\n        users.forEach(userID => {\n          const peer = createPeer(userID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n      socketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        console.log(\"[debug : addPeer : \", peersRef.current);\n        setPeers(users => {\n          console.log(\"users : \", users);\n          return [...users, peer];\n        });\n      });\n      socketRef.current.on(\"receiving returned signal\", ({\n        id,\n        signal\n      }) => {\n        const item = peersRef.current.find(p => p.peerID === id);\n        item.peer.signal(signal);\n      });\n      socketRef.current.on(\"disconnect user\", socketID => {\n        console.log(socketID);\n        console.log(\"disconnect user : \", peersRef.current);\n        peersRef.current = peersRef.current.filter(i => i.peerID !== socketID);\n        console.log(\"disconnect user : \", peersRef.current);\n        setPeers(peersRef.current.map(i => i.peer));\n      });\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"useEffect : \", peers);\n    return;\n  }, [peers]);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [peersRef.current.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: i.peerID\n    }, i + \"sideVoiceUser\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 42\n    }, this)), peers.map((i, index) => /*#__PURE__*/_jsxDEV(Audio, {\n      peer: i\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(App, \"BSlJdjKMBT9AWEv2mb3F3ZrcCww=\");\n\n_c3 = App;\nexport default _c4 = /*#__PURE__*/memo(App);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledAudio\");\n$RefreshReg$(_c2, \"Audio\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/chan/Desktop/Coder/StartPlayUp/StartPlay-Jsc1/frontend/src/JSC/Component/ChatComponent/SideVoiceUser.jsx"],"names":["React","memo","useEffect","useRef","useState","styled","Peer","io","Side","div","props","width","Users","StyledAudio","audio","Audio","ref","peer","on","stream","current","srcObject","App","socketRef","peers","setPeers","peersRef","roomID","navigator","mediaDevices","getUserMedia","video","then","emit","users","forEach","userID","createPeer","id","push","peerID","payload","addPeer","signal","callerID","console","log","item","find","p","socketID","filter","i","map","userToSignal","initiator","trickle","incomingSignal","index"],"mappings":"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","sourcesContent":["import React, {memo, useEffect, useRef, useState} from 'react';\nimport styled from 'styled-components'\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\"\n\nconst Side = styled.div`\n    height:${props => props.width || 600}px;\n    width:${props => props.width || 100}px;\n    margin-top:10px;\n    margin-bottom:10px;\n    padding:0px 5px 0px 5px;\n`;\nconst Users = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst StyledAudio = styled.audio`\n    height: 40%;\n    width: 50%;\n`;\n\nconst Audio = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <StyledAudio playsInline autoPlay ref={ref}/>\n    );\n}\n\nconst App = ({socketRef}) => {\n    const [peers, setPeers] = useState([]);\n    // const socketRef = useRef();\n    let peersRef = useRef([]);\n    const roomID = \"9a06eb80-9fd4-11eb-a3e2-377a237cffe7\";\n\n    useEffect(() => {\n        // socketRef.current = io.connect(\"/\");\n        navigator.mediaDevices.getUserMedia({video: false, audio: true}).then(stream => {\n            socketRef.current.emit(\"join room\", roomID);\n            socketRef.current.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })\n\n            socketRef.current.on(\"user joined\", payload => {\n                const peer = addPeer(payload.signal, payload.callerID, stream);\n                peersRef.current.push({\n                    peerID: payload.callerID,\n                    peer,\n                })\n                console.log(\"[debug : addPeer : \", peersRef.current);\n                setPeers(users => {\n                    console.log(\"users : \", users);\n                    return [...users, peer]\n                });\n            });\n\n            socketRef.current.on(\"receiving returned signal\", ({id, signal}) => {\n                const item = peersRef.current.find(p => p.peerID === id);\n                item.peer.signal(signal);\n            });\n\n            socketRef.current.on(\"disconnect user\", (socketID) => {\n                console.log(socketID);\n                console.log(\"disconnect user : \", peersRef.current);\n                peersRef.current = peersRef.current.filter((i) => i.peerID !== socketID)\n                console.log(\"disconnect user : \", peersRef.current);\n                setPeers(peersRef.current.map((i) => i.peer));\n            });\n        })\n    }, []);\n\n    useEffect(() => {\n        console.log(\"useEffect : \", peers);\n        return\n    }, [peers]);\n\n    function createPeer(userToSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending signal\", {userToSignal, callerID, signal})\n        })\n\n        return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning signal\", {signal, callerID})\n        })\n\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n    return (\n        <div>\n            {peersRef.current.map((i) => <div key={i + \"sideVoiceUser\"}>{i.peerID}</div>)}\n            {peers.map((i, index) => (\n                <Audio key={index} peer={i}/>\n            ))}\n        </div>\n    )\n}\n\nexport default memo(App);\n"]},"metadata":{},"sourceType":"module"}